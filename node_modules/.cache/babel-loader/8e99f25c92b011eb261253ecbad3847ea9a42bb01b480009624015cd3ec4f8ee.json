{"ast":null,"code":"/**\r\n * Applies mask on element.\r\n * @constructor\r\n * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\r\n * @param {Object} opts - Custom mask options\r\n * @return {InputMask}\r\n */\nfunction IMask(el) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\nexport { IMask as default };","map":{"version":3,"names":["IMask","el","opts","arguments","length","undefined","InputMask","default"],"sources":["C:/Users/Emerson/Desktop/Projeto_Pim/node_modules/imask/esm/core/holder.js"],"sourcesContent":["/**\r\n * Applies mask on element.\r\n * @constructor\r\n * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\r\n * @param {Object} opts - Custom mask options\r\n * @return {InputMask}\r\n */\r\nfunction IMask(el) {\r\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  // currently available only for input-like elements\r\n  return new IMask.InputMask(el, opts);\r\n}\r\n\r\nexport { IMask as default };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,KAAK,CAACC,EAAE,EAAE;EACjB,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACjF;EACA,OAAO,IAAIH,KAAK,CAACM,SAAS,CAACL,EAAE,EAAEC,IAAI,CAAC;AACtC;AAEA,SAASF,KAAK,IAAIO,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}