{"ast":null,"code":"export default function verificaCPF(cpf) {\n  var Soma;\n  var Resto;\n  Soma = 0;\n  const regex = /\\d/g;\n  let strCPF = cpf.match(regex).join(\"\");\n  if (strCPF == \"00000000000\") return false;\n  for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(strCPF.substring(i - 1, i)) * (11 - i);\n  Resto = Soma * 10 % 11;\n  if (Resto == 10 || Resto == 11) Resto = 0;\n  if (Resto != parseInt(strCPF.substring(9, 10))) return false;\n  Soma = 0;\n  for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(strCPF.substring(i - 1, i)) * (12 - i);\n  Resto = Soma * 10 % 11;\n  if (Resto == 10 || Resto == 11) Resto = 0;\n  if (Resto != parseInt(strCPF.substring(10, 11))) return false;\n  return true;\n}","map":{"version":3,"names":["verificaCPF","cpf","Soma","Resto","regex","strCPF","match","join","i","parseInt","substring"],"sources":["C:/Users/Emerson/Documents/React/Projeto_Pim/src/utils/verificaCpf.jsx"],"sourcesContent":["\r\nexport default function verificaCPF(cpf){\r\n    var Soma;\r\n    var Resto;\r\n    Soma = 0;\r\n\r\n    const regex = /\\d/g;\r\n    let strCPF = cpf.match(regex).join(\"\");\r\n\r\n    if (strCPF == \"00000000000\") \r\n    return false;\r\n\r\n    for (let i=1; i<=9; i++) Soma = Soma + parseInt(strCPF.substring(i-1, i)) * (11 - i);\r\n    Resto = (Soma * 10) % 11;\r\n\r\n    if ((Resto == 10) || (Resto == 11))  Resto = 0;\r\n    if (Resto != parseInt(strCPF.substring(9, 10)) ) \r\n    return false;\r\n    \r\n    Soma = 0;\r\n    for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(strCPF.substring(i-1, i)) * (12 - i);\r\n    Resto = (Soma * 10) % 11;\r\n\r\n    if ((Resto == 10) || (Resto == 11))  Resto = 0;\r\n    if (Resto != parseInt(strCPF.substring(10, 11))) return false;\r\n    return true;\r\n}"],"mappings":"AACA,eAAe,SAASA,WAAW,CAACC,GAAG,EAAC;EACpC,IAAIC,IAAI;EACR,IAAIC,KAAK;EACTD,IAAI,GAAG,CAAC;EAER,MAAME,KAAK,GAAG,KAAK;EACnB,IAAIC,MAAM,GAAGJ,GAAG,CAACK,KAAK,CAACF,KAAK,CAAC,CAACG,IAAI,CAAC,EAAE,CAAC;EAEtC,IAAIF,MAAM,IAAI,aAAa,EAC3B,OAAO,KAAK;EAEZ,KAAK,IAAIG,CAAC,GAAC,CAAC,EAAEA,CAAC,IAAE,CAAC,EAAEA,CAAC,EAAE,EAAEN,IAAI,GAAGA,IAAI,GAAGO,QAAQ,CAACJ,MAAM,CAACK,SAAS,CAACF,CAAC,GAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,IAAI,EAAE,GAAGA,CAAC,CAAC;EACpFL,KAAK,GAAID,IAAI,GAAG,EAAE,GAAI,EAAE;EAExB,IAAKC,KAAK,IAAI,EAAE,IAAMA,KAAK,IAAI,EAAG,EAAGA,KAAK,GAAG,CAAC;EAC9C,IAAIA,KAAK,IAAIM,QAAQ,CAACJ,MAAM,CAACK,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAC9C,OAAO,KAAK;EAEZR,IAAI,GAAG,CAAC;EACR,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAEN,IAAI,GAAGA,IAAI,GAAGO,QAAQ,CAACJ,MAAM,CAACK,SAAS,CAACF,CAAC,GAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,IAAI,EAAE,GAAGA,CAAC,CAAC;EACzFL,KAAK,GAAID,IAAI,GAAG,EAAE,GAAI,EAAE;EAExB,IAAKC,KAAK,IAAI,EAAE,IAAMA,KAAK,IAAI,EAAG,EAAGA,KAAK,GAAG,CAAC;EAC9C,IAAIA,KAAK,IAAIM,QAAQ,CAACJ,MAAM,CAACK,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,OAAO,KAAK;EAC7D,OAAO,IAAI;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}